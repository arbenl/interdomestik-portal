
name: Firebase CI/CD

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

env:
  PROJECT_ID: interdomestik-portal # Replace with your Firebase Project ID
  FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

jobs:
  build:
    name: Build (functions + frontend)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.16.1
      - name: Install workspace dependencies
        run: pnpm install
      - name: Build functions
        run: pnpm --filter functions build
      - name: Build frontend
        run: pnpm --filter frontend build

  deploy_staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.16.1
      - name: Install workspace dependencies
        run: pnpm install
      - name: Build functions
        run: pnpm --filter functions build
      - name: Build frontend
        run: pnpm --filter frontend build
      - name: Deploy to Firebase Staging
        run: pnpm dlx firebase-tools deploy --project ${{ env.PROJECT_ID }} --only hosting,functions,firestore:rules --token ${{ env.FIREBASE_TOKEN }}

  deploy_production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.16.1
      - name: Install workspace dependencies
        run: pnpm install
      - name: Build functions
        run: pnpm --filter functions build
      - name: Build frontend
        run: pnpm --filter frontend build
      - name: Deploy to Firebase Production
        run: pnpm dlx firebase-tools deploy --project ${{ env.PROJECT_ID }} --only hosting,functions,firestore:rules --token ${{ env.FIREBASE_TOKEN }}

  # Optional: add a manual rollback workflow separately if needed
