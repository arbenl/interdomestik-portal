
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function signedIn() { return request.auth != null; }
    function isAdmin() { return signedIn() && request.auth.token.role == 'admin'; }
    function isAgent() { return signedIn() && request.auth.token.role == 'agent'; }
    function isSelf(uid) { return signedIn() && request.auth.uid == uid; }
    function agentHasRegion(region) {
      return isAgent() &&
        request.auth.token.allowedRegions is list &&
        region in request.auth.token.allowedRegions;
    }

    match /users/{uid} {
      allow read: if isSelf(uid) || isAdmin();
      allow write: if isAdmin();
    }

    match /members/{uid} {
      allow read: if isSelf(uid) || isAdmin() || isAgent();
      allow create: if isSelf(uid) || agentHasRegion(request.resource.data.region);
      allow update: if isAdmin() || (
        isSelf(uid) &&
        // Members can only edit a safe subset of fields
        request.resource.data.diff(resource.data).changedKeys().hasOnly(["name","region","phone","orgId"]) &&
        // Ensure server-only fields are untouched
        request.resource.data.memberNo == resource.data.memberNo &&
        request.resource.data.agentId == resource.data.agentId &&
        request.resource.data.activeMembership == resource.data.activeMembership &&
        request.resource.data.status == resource.data.status &&
        request.resource.data.year == resource.data.year &&
        request.resource.data.expiresAt == resource.data.expiresAt
      );
      allow delete: if isAdmin();
    }

    match /members/{uid}/memberships/{year} {
      allow read: if isSelf(uid) || isAdmin();
      allow write: if isAdmin();
    }

    match /registry/{path=**} { allow read, write: if false; }

    match /metrics/{period}/{id} {
      allow read, write: if isAdmin();
    }
    match /audit_logs/{id} {
      allow read, write: if isAdmin();
    }

    match /mail/{id} {
      allow read, write: if false;
    }
  }
}
